{"version":3,"sources":["Webcam.js","App.js","reportWebVitals.js","index.js"],"names":["Webcam","state","webcamUrl","webcamTitle","fetch","then","response","text","data","webcamArray","split","setState","toString","src","this","title","width","height","Component","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAwCeA,E,kDApCb,aAAe,IAAD,8BACZ,gBACKC,MAAQ,CACTC,UAAW,GACXC,YAAa,IAJL,E,qDAQd,WAAqB,IAAD,OAGlBC,MAAM,wDACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJ,IAAIC,EAAcD,EAAKE,MAAM,KAE7B,EAAKC,SAAS,CACVT,UARY,4CAQeO,EAAY,GAAGG,SAAS,IACnDT,YAAaM,EAAY,U,oBAKnC,WACE,OACE,gCACE,wBAAQI,IAAKC,KAAKb,MAAMC,UAAWa,MAAM,gBAAgBC,MAAM,OAAOC,OAAO,UAC7E,4BACE,4BAAIH,KAAKb,MAAME,uB,GA7BJe,aC4BNC,MA3Bf,WACE,OACE,sBAAKC,UAAU,MAAf,UACE,+CAEA,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,+BAEf,sBAAKA,UAAU,+BAAf,UAEE,mBAAGA,UAAU,aAAb,SACE,gLAMF,cAAC,EAAD,OAIF,qBAAKA,UAAU,sCCbRC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBlB,MAAK,YAAkD,IAA/CmB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d91dd8c0.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { Button } from \"react-bootstrap\";\n\nclass Webcam extends Component {\n  constructor() {\n    super();\n    this.state = {\n        webcamUrl: \"\",\n        webcamTitle: \"\"\n    };\n  }\n\n  componentDidMount() {\n    var webcamBaseUrl = \"https://webcams.windy.com/webcams/stream/\";\n\n    fetch(\"https://random-webcam-api.herokuapp.com/randomWebcam\")\n      .then(response => response.text())\n      .then(data => {\n        var webcamArray = data.split(\",\");\n\n        this.setState({\n            webcamUrl: webcamBaseUrl + webcamArray[0].toString(10),\n            webcamTitle: webcamArray[1]\n        });\n      });\n  }\n\n  render() {\n    return (\n      <div>\n        <iframe src={this.state.webcamUrl} title=\"Random Webcam\" width=\"100%\" height=\"750vh\"></iframe>\n        <p>\n          <b>{this.state.webcamTitle}</b>\n        </p>\n\n      </div>\n    );\n  }\n}\n\nexport default Webcam;\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport Webcam from \"./Webcam\"\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Random Webcam</h1>\n\n      <div className=\"row\">\n        <div className=\"col-lg-2 col-md-1 col-sm-0\" />\n\n        <div className=\"col-lg-8 col-md-10 col-sm-12\">\n\n          <p className=\"text-muted\">\n            <i>\n              Note: Webcam links are occasionally broken. If a webcam does not\n              load after a few seconds, please reload the page to get a new random webcam.\n            </i>\n          </p>\n\n          <Webcam />\n\n        </div>\n\n        <div className=\"col-lg-2 col-md-1 col-sm-0\" />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}